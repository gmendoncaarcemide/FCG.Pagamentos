// <auto-generated />
using System;
using FCG.Pagamentos.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FCG.Pagamentos.Infrastructure.Migrations
{
    [DbContext(typeof(PagamentosDbContext))]
    [Migration("20250907184839_UpdateBrazilianPaymentTypes")]
    partial class UpdateBrazilianPaymentTypes
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FCG.Pagamentos.Domain.Pagamentos.Entities.Transacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<string>("CodigoAutorizacao")
                        .HasColumnType("text");

                    b.Property<string>("CodigoTransacao")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataConfirmacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataProcessamento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DetalhesPagamento")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("ErroProcessamento")
                        .HasColumnType("text");

                    b.Property<Guid>("JogoId")
                        .HasColumnType("uuid");

                    b.Property<string>("Moeda")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<string>("Observacoes")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ProximaTentativa")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Referencia")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<int>("TentativasProcessamento")
                        .HasColumnType("integer");

                    b.Property<int>("TipoPagamento")
                        .HasColumnType("integer");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("Valor")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("Referencia")
                        .IsUnique();

                    b.HasIndex("Status");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Transacoes");
                });
#pragma warning restore 612, 618
        }
    }
}
